<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop" 
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd" default-autowire="byName">

    
    <bean id="shiroRedisTemplate" 
	    class="org.springframework.data.redis.core.RedisTemplate" 
	    p:connection-factory-ref="jedisConnectionFactory">
	    <property name="keySerializer">  
	        <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />  
	    </property>
	    <property name="valueSerializer">  
	        <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />  
	    </property>
	</bean>
	
	<bean id="redisManager" class="com.zy.dmop.security.shiro.redis.RedisManager" />
	
    <!-- shiro -->
    

    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <!-- constructor-arg ref="cacheManager"/ -->
        <property name="hashAlgorithmName" value="sha-256"/>
        <property name="hashIterations" value="1024"/>
        <!--property name="storedCredentialsHexEncoded" value="true"/ -->
    </bean>

    <bean id="shiroUserDbRealm" class="com.zy.dmop.security.shiro.ShiroUserDbRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher" />        
    </bean>

	<!-- 用户授权信息Cache（本机内存实现） -->    
	<bean id="memoryConstrainedCacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />
	
	<bean id="redisCacheManager" class="com.zy.dmop.security.shiro.redis.RedisCacheManager">  
        <property name="redisManager" ref="redisManager" />  
    </bean> 

    <!-- session会话存储的实现类 -->
	<bean id="memorySessionDao" class="org.apache.shiro.session.mgt.eis.MemorySessionDAO" />
    <bean id="redisSessionDao" class="com.zy.dmop.security.shiro.redis.RedisSessionDao">
        <property name="redisManager" ref="redisManager" />
    </bean>
    
    <bean id="defaultWebSessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">    
        <!-- 设置全局会话超时时间，默认30分钟(1800000) -->
        <property name="globalSessionTimeout" value="1800000" />
        <!-- 是否在会话过期后会调用SessionDAO的delete方法删除会话 默认true -->
        <property name="deleteInvalidSessions" value="true" />
        <!-- 会话验证器调度时间 -->
        <property name="sessionValidationInterval" value="1800000" />
        <!-- session存储的实现 -->
        <property name="sessionDAO" ref="${zy-security.shiro.sessionDao}" />
        <!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->
        <property name="sessionIdCookie" ref="sharesession" />
        
        <!-- 定时检查失效的session -->  
        <property name="sessionValidationSchedulerEnabled" value="true" />
    </bean>
    
	<!-- sessionIdCookie的实现,用于重写覆盖容器默认的JSESSIONID -->  
    <bean id="sharesession" class="org.apache.shiro.web.servlet.SimpleCookie">  
        <!-- cookie的name,对应的默认是 JSESSIONID -->  
        <constructor-arg name="name" value="SHAREJSESSIONID" />  
        <!-- jsessionId的path为 / 用于多个系统共享jsessionId -->  
        <property name="path" value="/" />  
        <property name="httpOnly" value="true"/>  
    </bean>
	
    <!-- Shiro's main business-tier object for web-enabled applications -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="shiroUserDbRealm"/>
        <property name="cacheManager" ref="${zy-security.shiro.cacheManager}" />
		<property name="sessionManager" ref="defaultWebSessionManager" />
    </bean>

	<bean id="sslFilter" class="org.apache.shiro.web.filter.authz.SslFilter">  
		<property name="port" value="8443"/>  
	</bean>
	
	<bean id="formAuthenticationFilter" class="com.zy.dmop.security.shiro.filter.BaseFormAuthenticationFilter"></bean>
	<bean id="systemLogOutFilter" class="com.zy.dmop.security.shiro.filter.SystemLogOutFilter"></bean>
    <!-- bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter" -->
    <!-- <bean id="formAuthenticationFilter" class="com.gd.ivt.security.shiro.BaseFormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        property name="loginUrl" value="/login"/
    </bean> -->

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <!-- property name="loginUrl" value="/login.jsp"/>
        <property name="successUrl" value="/index"/-->
        
        <!-- keta adapt -->
        <property name="loginUrl" value="/login" />
		<!--property name="successUrl" value="/management/index" /-->
		<property name="successUrl" value="/index" />
        
        <property name="unauthorizedUrl" value="/unauthorized.jsp"/>
        <property name="filters">
            <map>
            	
            	<!-- <entry key="authc" value-ref="captchaFormAuthenticationFilter"/> -->
            	<entry key="logout" value-ref="systemLogOutFilter"/>
				<!-- <entry key="ssl" value-ref="sslFilter"/> -->
				<entry key="authc" value-ref="formAuthenticationFilter"/>
								
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>
             	/homepage/getData=anon
            	/pageJump/toFirstPage = anon
            	/pageJump/toLogin = anon
            	/index = anon
            	/firstPage/getData = anon
				/favicon.ico = anon
                /assets/** = anon
                /bootstrap/** = anon
                /plugins/** = anon
                /js/** = anon
                /css/** = anon
                /images/** = anon
               	/mobile/** = anon
                
                /styles/** = anon
				/login/timeout = anon
				/login = authc
				/logout = logout
		    	/** = user
                <!-- 
                /login/timeout = anon
                
                /login.jsp = ssl,authc
                /logout = logout
                /** = user,port[80]
                 -->
            </value>
        </property>
    </bean>
	
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <!-- Enable Shiro Annotations for Spring-configured beans.  Only run after -->
    <!-- the lifecycleBeanProcessor has run: -->
    <!-- 开启shiro注解支持 -->
    <!-- <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
    	<property name="proxyTargetClass" value="true" />
	</bean>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean> -->
    
    
    <!-- keta adapt
    <bean id="captchaFormAuthenticationFilter" class="com.ketayao.ketacustom.shiro.CaptchaFormAuthenticationFilter"/>
	<bean id="dWZUserFilter" class="com.ketayao.ketacustom.shiro.DWZUserFilter"/>
	 -->
</beans>